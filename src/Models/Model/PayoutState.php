<?php
/**
 * PayoutState
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  DeveloperayoFireblocksLaravel
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Fireblocks API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.5
 * Contact: support@fireblocks.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace DeveloperayoFireblocksLaravel\Model;
use \DeveloperayoFireblocksLaravel\ObjectSerializer;

/**
 * PayoutState Class Doc Comment
 *
 * @category Class
 * @description - CREATED - payout instruction set created with all its details - FILE_FOUND - new file found in the FTP - REQUESTED - payout requested with all its details - TRANSLATED - payout instruction account IDs identified and translated - PROCESSING - payout instruction set executed and is processing - SUBMITTED - transactions submitted for payout instructions - FINALIZED - payout finished processing, all transactions processed successfully - INSUFFICIENT_BALANCE - insufficient balance in the payment account (can be a temporary state) - FAILED - one or more of the payout instructions failed
 * @package  DeveloperayoFireblocksLaravel
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PayoutState
{
    /**
     * Possible values of this enum
     */
    public const CREATED = 'CREATED';

    public const FILE_FOUND = 'FILE_FOUND';

    public const REQUESTED = 'REQUESTED';

    public const TRANSLATED = 'TRANSLATED';

    public const PROCESSING = 'PROCESSING';

    public const SUBMITTED = 'SUBMITTED';

    public const FINALIZED = 'FINALIZED';

    public const INSUFFICIENT_BALANCE = 'INSUFFICIENT_BALANCE';

    public const FAILED = 'FAILED';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::CREATED,
            self::FILE_FOUND,
            self::REQUESTED,
            self::TRANSLATED,
            self::PROCESSING,
            self::SUBMITTED,
            self::FINALIZED,
            self::INSUFFICIENT_BALANCE,
            self::FAILED
        ];
    }
}


