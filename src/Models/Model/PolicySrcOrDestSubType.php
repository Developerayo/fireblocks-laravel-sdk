<?php
/**
 * PolicySrcOrDestSubType
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  DeveloperayoFireblocksLaravel
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Fireblocks API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.5
 * Contact: support@fireblocks.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace DeveloperayoFireblocksLaravel\Model;
use \DeveloperayoFireblocksLaravel\ObjectSerializer;

/**
 * PolicySrcOrDestSubType Class Doc Comment
 *
 * @category Class
 * @description * EXTERNAL - A whitelisted wallet assigned as external is typically used for addresses managed by your clients and counterparties * INTERNAL - A whitelisted wallet assigned as internal, is typically used for addresses that you control outside of your Fireblocks workspace * CONTRACT - A whitelisted wallet assigned as contract is for identifying and managing external smart contracts * EXCHANGETEST - Exchanges which operate only on testnet assets * \&quot;*\&quot; - All subtypes
 * @package  DeveloperayoFireblocksLaravel
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PolicySrcOrDestSubType
{
    /**
     * Possible values of this enum
     */
    public const EXTERNAL = 'EXTERNAL';

    public const INTERNAL = 'INTERNAL';

    public const CONTRACT = 'CONTRACT';

    public const EXCHANGETEST = 'EXCHANGETEST';

    public const STAR = '*';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::EXTERNAL,
            self::INTERNAL,
            self::CONTRACT,
            self::EXCHANGETEST,
            self::STAR
        ];
    }
}


